#!/bin/bash

# Script Completo de Setup do PMCell WooCommerce
# Instala e configura tudo automaticamente

set -e

echo "üöÄ PMCell WooCommerce - Setup Completo"
echo "======================================"
echo ""

# Cores para output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# Fun√ß√£o para logs coloridos
log_info() {
    echo -e "${BLUE}‚ÑπÔ∏è  $1${NC}"
}

log_success() {
    echo -e "${GREEN}‚úÖ $1${NC}"
}

log_warning() {
    echo -e "${YELLOW}‚ö†Ô∏è  $1${NC}"
}

log_error() {
    echo -e "${RED}‚ùå $1${NC}"
}

# Verificar se estamos no diret√≥rio correto
if [ ! -f "scripts/install-woocommerce.sh" ]; then
    log_error "Execute este script do diret√≥rio raiz do projeto"
    exit 1
fi

# Verificar se WordPress est√° instalado
log_info "Verificando pr√©-requisitos..."
if ! wp core is-installed 2>/dev/null; then
    log_error "WordPress n√£o est√° instalado. Execute o setup b√°sico primeiro."
    exit 1
fi
log_success "WordPress instalado e funcionando"

# Verificar WP-CLI
if ! command -v wp &> /dev/null; then
    log_error "WP-CLI n√£o encontrado. Instale o WP-CLI primeiro."
    exit 1
fi
log_success "WP-CLI dispon√≠vel"

# Fazer backup antes de come√ßar
log_info "Fazendo backup preventivo..."
if [ -f "scripts/backup.sh" ]; then
    ./scripts/backup.sh > /dev/null 2>&1
    log_success "Backup preventivo criado"
else
    log_warning "Script de backup n√£o encontrado"
fi

echo ""
echo "üéØ Iniciando instala√ß√£o completa do WooCommerce..."
echo ""

# Etapa 1: Instalar WooCommerce
log_info "Etapa 1/4: Instalando WooCommerce base..."
if ./scripts/install-woocommerce.sh; then
    log_success "WooCommerce instalado com sucesso"
else
    log_error "Falha na instala√ß√£o do WooCommerce"
    exit 1
fi

echo ""

# Etapa 2: Configurar plugins brasileiros
log_info "Etapa 2/4: Configurando plugins brasileiros..."
if ./scripts/configure-brazil.sh; then
    log_success "Plugins brasileiros configurados"
else
    log_error "Falha na configura√ß√£o dos plugins brasileiros"
    exit 1
fi

echo ""

# Etapa 3: Configurar Mercado Pago
log_info "Etapa 3/4: Configurando Mercado Pago..."
if ./scripts/setup-mercadopago.sh; then
    log_success "Mercado Pago configurado"
else
    log_error "Falha na configura√ß√£o do Mercado Pago"
    exit 1
fi

echo ""

# Etapa 4: Configurar Melhor Envio
log_info "Etapa 4/4: Configurando Melhor Envio..."
if ./scripts/setup-melhor-envio.sh; then
    log_success "Melhor Envio configurado"
else
    log_error "Falha na configura√ß√£o do Melhor Envio"
    exit 1
fi

echo ""

# Verifica√ß√µes finais
log_info "Executando verifica√ß√µes finais..."

# Verificar plugins essenciais
REQUIRED_PLUGINS=("woocommerce" "woocommerce-extra-checkout-fields-for-brazil" "woocommerce-mercadopago" "melhor-envio-cotacao")
FAILED_PLUGINS=()

for plugin in "${REQUIRED_PLUGINS[@]}"; do
    if wp plugin is-active "$plugin" 2>/dev/null; then
        log_success "Plugin ativo: $plugin"
    else
        log_warning "Plugin n√£o ativo: $plugin"
        FAILED_PLUGINS+=("$plugin")
    fi
done

# Verificar p√°ginas essenciais
PAGES=("shop" "cart" "checkout" "my-account")
for page in "${PAGES[@]}"; do
    if wp post list --name="$page" --post_type=page --format=count | grep -q "1"; then
        log_success "P√°gina criada: $page"
    else
        log_warning "P√°gina n√£o encontrada: $page"
    fi
done

# Verificar configura√ß√µes b√°sicas
CURRENCY=$(wp option get woocommerce_currency)
if [ "$CURRENCY" = "BRL" ]; then
    log_success "Moeda configurada: $CURRENCY"
else
    log_warning "Moeda n√£o configurada corretamente: $CURRENCY"
fi

COUNTRY=$(wp option get woocommerce_default_country)
if [[ "$COUNTRY" == *"BR"* ]]; then
    log_success "Pa√≠s configurado: $COUNTRY"
else
    log_warning "Pa√≠s n√£o configurado corretamente: $COUNTRY"
fi

# Gerar relat√≥rio final
echo ""
echo "üìä Gerando relat√≥rio de instala√ß√£o..."

REPORT="./data/setup-report-$(date +"%Y%m%d_%H%M%S").txt"
cat > "$REPORT" << EOF
PMCell WooCommerce - Relat√≥rio de Instala√ß√£o
===========================================
Data: $(date)
WordPress: $(wp core version)
WooCommerce: $(wp plugin get woocommerce --field=version 2>/dev/null || echo "N/A")

Plugins Instalados:
------------------
$(wp plugin list --status=active --format=table)

P√°ginas WooCommerce:
-------------------
$(wp post list --post_type=page --meta_key="_wp_page_template" --format=table)

Configura√ß√µes:
--------------
Moeda: $(wp option get woocommerce_currency)
Pa√≠s: $(wp option get woocommerce_default_country)
Gest√£o de Estoque: $(wp option get woocommerce_manage_stock)
C√°lculo de Impostos: $(wp option get woocommerce_calc_taxes)

URLs Importantes:
----------------
Home: $(wp option get home)
Loja: $(wp option get home)/shop
Carrinho: $(wp option get home)/cart
Checkout: $(wp option get home)/checkout
Minha Conta: $(wp option get home)/my-account
Admin: $(wp option get home)/wp-admin

Zonas de Entrega:
----------------
$(wp wc shipping_zone list --format=table)
EOF

log_success "Relat√≥rio salvo em: $REPORT"

echo ""
echo "üéâ INSTALA√á√ÉO CONCLU√çDA COM SUCESSO!"
echo "=================================="
echo ""
log_success "PMCell WooCommerce est√° pronto para uso!"
echo ""
echo "üìã Pr√≥ximos passos importantes:"
echo ""
echo "1. üîë Configure suas credenciais do Mercado Pago:"
echo "   ‚Ä¢ Acesse: $(wp option get home)/wp-admin"
echo "   ‚Ä¢ V√° em: WooCommerce > Configura√ß√µes > Pagamentos"
echo "   ‚Ä¢ Configure PIX, Cart√£o e Boleto"
echo ""
echo "2. üì¶ Configure o Melhor Envio:"
echo "   ‚Ä¢ Acesse: WooCommerce > Configura√ß√µes > Entrega"
echo "   ‚Ä¢ Configure seu Token de API"
echo ""
echo "3. üì± Adicione seus produtos:"
echo "   ‚Ä¢ Acesse: Produtos > Adicionar Novo"
echo "   ‚Ä¢ Use as categorias j√° criadas"
echo ""
echo "4. üß™ Teste o processo de compra:"
echo "   ‚Ä¢ Acesse: $(wp option get home)/shop"
echo "   ‚Ä¢ Fa√ßa um pedido de teste"
echo ""
echo "üåê URLs importantes:"
echo "‚Ä¢ Loja: $(wp option get home)/shop"
echo "‚Ä¢ Admin: $(wp option get home)/wp-admin"
echo "‚Ä¢ Relat√≥rio: $REPORT"
echo ""

if [ ${#FAILED_PLUGINS[@]} -gt 0 ]; then
    echo "‚ö†Ô∏è  Plugins que precisam de aten√ß√£o:"
    for plugin in "${FAILED_PLUGINS[@]}"; do
        echo "   ‚Ä¢ $plugin"
    done
    echo ""
fi

log_success "Setup completo! Sua loja PMCell est√° pronta! üõí‚ú®"